<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.1.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task-3.1.xsd">

	<!-- 加载全局配置文件  -->
	<context:property-placeholder location="classpath:config/config.properties" ignore-unresolvable="true"/>
	<mvc:resources location="/js/" mapping="/js/**"/>
	<mvc:resources location="/css/" mapping="/css/**"/>
	<mvc:resources location="/ext/" mapping="/ext/**"/>
	<mvc:annotation-driven />
	
	<!-- 开启这个配置，spring才能识别@Scheduled注解 -->  
    <task:annotation-driven scheduler="djtScheduler" mode="proxy"/>  
    <task:scheduler id="djtScheduler" pool-size="10"/>

	<!-- 使用注解方式的事务 -->
	<context:component-scan base-package="com.nebo_spider">
    	<context:exclude-filter type="regex"  expression= "com/.dajiangtai/.util/..*" />
    </context:component-scan>
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- 自动扫描dao -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="annotationClass" value="org.springframework.stereotype.Repository" />
		<property name="basePackage" value="com.nebo_spider.dao" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<!--  bean方式配置dao
	<bean id="taskDao" class="org.mybatis.spring.mapper.MapperFactoryBean">  
       <property name="mapperInterface"  value="com.dajiangtai.dao.IUserDao" />  
       <property name="sqlSessionFactory" ref="sqlSessionFactory" />  
    </bean>
    -->
	  
	<!-- 设置freeMarker的配置文件路径 -->
	<bean id="freemarkerConfiguration"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location" value="classpath:config/freemarker.properties" />
	</bean>

	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />

	<!-- 配置freeMarker的模板路径 -->
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath">
			<value>/view/</value>
		</property>
		<property name="freemarkerSettings"><!-- 如果模板不经常更新，此属性设置更新延迟时间 -->
	        <props>
	          <prop key="template_update_delay">0</prop>          
	          <prop key="defaultEncoding">UTF-8</prop>
	          <prop key="locale">zh_CN</prop>
	        </props>
	    </property>
		<property name="freemarkerVariables">
			<map>
				<entry key="xml_escape" value-ref="fmXmlEscape" />
				<entry key="wwwRoot" value="${wwwRoot}"></entry>
				<entry key="wwwName" value="${wwwName}"></entry>
				<entry key="webRoot" value="${webRoot}"></entry>
				<entry key="webName" value="${webName}"></entry>  
				<entry key="techName" value="${techName}"></entry>
                <entry key="scriptRoot" value="${scriptRoot}"></entry>
                <entry key="cssRoot" value="${cssRoot}"></entry>
                <entry key="imagesRoot" value="${imagesRoot}"></entry>
                <entry key="videoRoot" value="${videoRoot}"></entry>
                <entry key="uploadRoot" value="${uploadRoot}"></entry>
                <entry key="contentRoot" value="${contentRoot}"></entry>
                <entry key="commonRoot" value="${commonRoot}"></entry>
                <entry key="hadoopRoot" value="${hadoopRoot}"></entry>
                <entry key="cid" value="${cid}"></entry>
                <entry key="courseName" value="${courseName}"></entry>
                <entry key="pageSize" value="${pageSize}"></entry>
                <entry key="medal" value="${medal}"></entry>
                <entry key="expected_duration" value="${expected_duration}"></entry>
                <entry key="all_task_query_factors" value="${all_task_query_factors}"></entry>
			</map>
		</property>
	</bean>


	<!-- 配置freeMarker视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="cache" value="true" />
		<property name="prefix" value="" />
		<property name="suffix" value=".ftl" />

		<!-- 如果你需要使用Spring 对 FreeMarker 宏命令的支持, 将这个属性设为true -->	
		<property name="exposeSpringMacroHelpers" value="true"></property>
		
		<property name="exposeRequestAttributes" value="true"></property>

		<property name="exposeSessionAttributes" value="true" />

	</bean>
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="prefix" value="/jsp/"/>  
        <property name="suffix" value=".jsp"/>  
    </bean>
    <!-- 配置登录拦截器 -->
    <!-- <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.dajiangtai.interceptor.LoginInterceptor">
                 <property name="excludedUrls">
                    <list>
                        <value>/loginAdapter.do</value>
                        <value>/logOut.do</value>
                        <value>/api/user</value>
                        <value>/api/msg</value>
                        <value>/api/task</value>
                    </list>
                 </property>
            </bean>
        </mvc:interceptor>
    </mvc:interceptors> -->
</beans>
